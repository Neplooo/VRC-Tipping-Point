{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><comment id=\":YErA!qkhuw6g(g71m,R\" x=\"647\" y=\"-11\" h=\"218\" w=\"286\">Project:  \n              \nAuthor:  \n\nCreated:\n\nConfiguration:\nNone</comment><block type=\"v5_events_when_driver\" id=\"2sxv[tBvb/TOc3zh^a$R\" x=\"390\" y=\"10\"><next><block type=\"v5_control_forever\" id=\"F.tPZ%Bi}Wa/I(0.4jnV\"></block></next></block><block type=\"v5_events_when_autonomous\" id=\"y)n):)-6lhx,qkLtf#Zn\" x=\"670\" y=\"290\"><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"V}3Em8zb`sanzX$sh%JZ\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"YfR(oz-`8,y_8`|6.p4S\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"w)%MU[{ub33IRLS4`!ha\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"B2R8//36ca;t_s.zBWqM\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"(#XSc?Q#3UBW*RF$hU7r\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\".?$POYTDVHw;;+rp*2t0\"><field name=\"NUM\">30</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\":n2O#-?Yt{8CtT=Fg1g6\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"1hkqbQHPe(*V$Doim|Hl\"><field name=\"NUM\">6</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"aYQZ9Ehhz(`G0-8;O7o)\"><field name=\"MOTOR\">Clamp</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"9-@;FRZZ3+Dys*[^AZOc\"><field name=\"NUM\">500</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"P8eM.,@66N-?Hl0O/2Zd\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"*ty0OBIIFh|uuT^}#j)K\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"21y8#{q6?h@_UfIQXs_e\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"C.|XA@C9zOW{.tltx.lO\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"??aUFG6b?suOWI(BjGV/\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"#Sy-*d%T)odTz%qs[(9q\"><field name=\"NUM\">20</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"4Wyw7%-JiyTRi(I9X|OJ\"><field name=\"MOTOR\">TiltClamp</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"|:37:(*BJVs+04w[yf!!\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"ii=G;$z4r6Tt:|%4X`7~\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"*{qJSS^z#-QpNK+2JZBi\"><field name=\"NUM\">125</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"._1Ka8d!}7E~LFRa`5{M\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Fl`S,qd0((UYqIx1ipaL\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"o_!!A%pB7uJKS:SDtTBw\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"ZwazSgJV+D3.7oX^EjwM\"><field name=\"NUM\">22</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\":{Qu$!=2FvvnLK8K[g9$\"><field name=\"MOTOR\">TiltClamp</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"=C{gdbLYa@Q:fNPm|%,9\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"2_XGFJGjre3r{o:^{$r(\"><field name=\"MOTOR\">FourBar</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"(MS%`gmQD+v#K3TtO(T*\"><field name=\"NUM\">30</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"cnW/Vx4wd2r1MsET},_y\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"i#lthf/!s-DCBF/tyhm)\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"7^:c:w}Ns_2`PqA_V@0H\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"3+LA%rvgQTSZGbTYqCal\"><field name=\"NUM\">30</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"xa3,AQGtYr*9LD^I5*US\"><field name=\"MOTOR\">FourBar</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Xyh(3|%9,p.c}~EF(b@q\"><field name=\"NUM\">600</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"J6qYjTaAC%X5Mw/IU?W`\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"ooms{$ptYGc2Y,hlH]0{\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"}q8T/Knn#m0JHvjQ)j^/\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"c,!A2FpUU**j[(QAEwh.\"><field name=\"NUM\">6</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"8jOX+Lrj?lx$Nawh{V|.\"><field name=\"MOTOR\">FourBar</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"naD_($b0i/00C2b5/3YY\"><field name=\"NUM\">30</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"}h[WA4U41{ELKrXciK{H\"><field name=\"MOTOR\">Clamp</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"A%{NN/sJ@C+I#gCuu-Bl\"><field name=\"NUM\">300</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"X/FCpCGWm^`r1$5_4sM=\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"$[oSrF}Bl}Y_@m@E7b_g\"><field name=\"NUM\">4</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\";]kd3A_O^fr7xfd@K`4K\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"t]OpgCfQn7;k]f:fscV#\"><field name=\"NUM\">300</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"50\" y=\"350\"><next><block type=\"v5_motion_set_motor_stopping\" id=\"Q:bFZB!}V^mut~RYS=K6\"><field name=\"MOTOR\">FourBar</field><field name=\"MODE\">hold</field><next><block type=\"v5_motion_set_motor_stopping\" id=\"WuJ(x$3y6)t`:#xRPdXu\"><field name=\"MOTOR\">Clamp</field><field name=\"MODE\">hold</field><next><block type=\"v5_motion_set_motor_stopping\" id=\"p!l%1C@Bzm8YH5{f6G!k\"><field name=\"MOTOR\">TiltClamp</field><field name=\"MODE\">hold</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"@{#oywp.d,kc(S9T2X^w\"><field name=\"MOTOR\">FourBar</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"CE;-N^?Q(gC=.fOw%Zr!\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"=Ya^$6duQYw3a/d[m))C\"><field name=\"MOTOR\">Clamp</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"W2E@?{r|r1Yo.)YDCzLP\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"#=;H_tVXbEnVyk8o|_Xk\"><field name=\"MOTOR\">TiltClamp</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"U3:utUtC3q/z`L_KYVKl\"><field name=\"NUM\">80</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[4,6,7,5,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"7:5","direction":"rev","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[2,9],"name":"FourBar","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"Up","rev":"Down","gear":"ratio36_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[3],"name":"Clamp","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"Up","rev":"Down","gear":"ratio18_1"},"triportSourcePort":22},{"port":[8],"name":"TiltClamp","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"Up","rev":"Down","gear":"ratio36_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"FourBar","leftDir":"false","right":"Clamp","rightDir":"false","upDown":"TiltClamp","upDownDir":"false","xB":"","xBDir":"false","drive":"split","id":"primary"},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor leftMotorA = motor(PORT4, ratio18_1, true);\nmotor leftMotorB = motor(PORT6, ratio18_1, true);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT7, ratio18_1, false);\nmotor rightMotorB = motor(PORT5, ratio18_1, false);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1.4);\n\nmotor FourBarMotorA = motor(PORT2, ratio36_1, true);\nmotor FourBarMotorB = motor(PORT9, ratio36_1, false);\nmotor_group FourBar = motor_group(FourBarMotorA, FourBarMotorB);\n\nmotor Clamp = motor(PORT3, ratio18_1, false);\n\nmotor TiltClamp = motor(PORT8, ratio36_1, true);\n\ncontroller Controller1 = controller(primary);\n\n\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool Controller1LeftShoulderControlMotorsStopped = true;\nbool Controller1RightShoulderControlMotorsStopped = true;\nbool Controller1UpDownButtonsControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller1 = true;\nbool DrivetrainRNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3 + Axis1\n      // right = Axis3 - Axis1\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position() + Controller1.Axis1.position();\n      int drivetrainRightSideSpeed = Controller1.Axis3.position() - Controller1.Axis1.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller1) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller1 = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller1) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonL1/ButtonL2 status to control FourBar\n      if (Controller1.ButtonL1.pressing()) {\n        FourBar.spin(forward);\n        Controller1LeftShoulderControlMotorsStopped = false;\n      } else if (Controller1.ButtonL2.pressing()) {\n        FourBar.spin(reverse);\n        Controller1LeftShoulderControlMotorsStopped = false;\n      } else if (!Controller1LeftShoulderControlMotorsStopped) {\n        FourBar.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1LeftShoulderControlMotorsStopped = true;\n      }\n      // check the ButtonR1/ButtonR2 status to control Clamp\n      if (Controller1.ButtonR1.pressing()) {\n        Clamp.spin(forward);\n        Controller1RightShoulderControlMotorsStopped = false;\n      } else if (Controller1.ButtonR2.pressing()) {\n        Clamp.spin(reverse);\n        Controller1RightShoulderControlMotorsStopped = false;\n      } else if (!Controller1RightShoulderControlMotorsStopped) {\n        Clamp.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1RightShoulderControlMotorsStopped = true;\n      }\n      // check the ButtonUp/ButtonDown status to control TiltClamp\n      if (Controller1.ButtonUp.pressing()) {\n        TiltClamp.spin(forward);\n        Controller1UpDownButtonsControlMotorsStopped = false;\n      } else if (Controller1.ButtonDown.pressing()) {\n        TiltClamp.spin(reverse);\n        Controller1UpDownButtonsControlMotorsStopped = false;\n      } else if (!Controller1UpDownButtonsControlMotorsStopped) {\n        TiltClamp.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1UpDownButtonsControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nfloat myVariable;\n\n// \"when driver control\" hat block\nint ondriver_drivercontrol_0() {\n  while (true) {\n  wait(5, msec);\n  }\n  return 0;\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  Drivetrain.setDriveVelocity(100.0, percent);\n  Drivetrain.driveFor(forward, 50.0, inches, true);\n  Drivetrain.setDriveVelocity(30.0, percent);\n  Drivetrain.driveFor(forward, 6.0, inches, true);\n  Clamp.spinFor(reverse, 500.0, degrees, true);\n  Drivetrain.setDriveVelocity(100.0, percent);\n  Drivetrain.setTurnVelocity(100.0, percent);\n  Drivetrain.driveFor(reverse, 20.0, inches, true);\n  TiltClamp.spinFor(forward, 100.0, degrees, false);\n  Drivetrain.turnFor(left, 125.0, degrees, true);\n  Drivetrain.setDriveVelocity(50.0, percent);\n  Drivetrain.driveFor(reverse, 22.0, inches, true);\n  TiltClamp.spinFor(reverse, 90.0, degrees, true);\n  FourBar.spinFor(forward, 30.0, degrees, true);\n  Drivetrain.setDriveVelocity(100.0, percent);\n  Drivetrain.driveFor(forward, 30.0, inches, true);\n  FourBar.spinFor(forward, 600.0, degrees, true);\n  Drivetrain.turnFor(left, 90.0, degrees, true);\n  Drivetrain.driveFor(forward, 6.0, inches, true);\n  FourBar.spinFor(reverse, 30.0, degrees, true);\n  Clamp.spinFor(forward, 300.0, degrees, true);\n  Drivetrain.driveFor(reverse, 4.0, inches, true);\n  Drivetrain.turnFor(left, 300.0, degrees, true);\n  return 0;\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  FourBar.setStopping(hold);\n  Clamp.setStopping(hold);\n  TiltClamp.setStopping(hold);\n  FourBar.setVelocity(80.0, percent);\n  Clamp.setVelocity(100.0, percent);\n  TiltClamp.setVelocity(80.0, percent);\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n  vex::task drive0(ondriver_drivercontrol_0);\n\n\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  drive0.stop();\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}